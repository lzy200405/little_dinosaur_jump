<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>